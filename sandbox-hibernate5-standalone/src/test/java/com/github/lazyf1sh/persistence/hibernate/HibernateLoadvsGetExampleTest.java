package com.github.lazyf1sh.persistence.hibernate;

import com.github.lazyf1sh.sandbox.persistence.entities.ParentEntity;
import com.github.lazyf1sh.sandbox.persistence.util.HibernateSessionFactory;
import org.hibernate.Session;
import org.hibernate.proxy.HibernateProxy;
import org.junit.BeforeClass;
import org.junit.Test;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

/**
 * this example demonsrates that
 * 1. entity var is buildEntityManagerFactory pure object
 */
public class HibernateLoadvsGetExampleTest
{

    @BeforeClass
    public static void populate()
    {
        ParentEntity parentEntity = new ParentEntity();
        parentEntity.setId(0);
        parentEntity.setName("some parent name");

        Session session = HibernateSessionFactory.openSession();
        session.getTransaction()
               .begin();
        session.save(parentEntity);
        session.getTransaction()
               .commit();
    }

    /**
     * session.get() hits the database immediately
     */
    @Test
    public void get()
    {
        Session session = HibernateSessionFactory.openSession();
        session.getTransaction()
               .begin();
        ParentEntity entity = session.get(ParentEntity.class, 0); //pure java object
        session.getTransaction()
               .commit();

        assertFalse(entity instanceof HibernateProxy);
        assertFalse(entity.getClass()
                          .toString()
                          .contains("$HibernateProxy$"));
        session.close();
    }

    /**
     * ParentEntity is proxy
     */
    @Test
    public void load()
    {
        Session session = HibernateSessionFactory.openSession();
        session.getTransaction()
               .begin();
        ParentEntity parentEntity = session.load(ParentEntity.class, 9999999); //proxy object generated by hibernate
        session.getTransaction()
               .commit();

        assertTrue(parentEntity instanceof HibernateProxy);
        assertTrue(parentEntity.getClass()
                               .toString()
                               .contains("$HibernateProxy$"));

        session.close();
    }
}
