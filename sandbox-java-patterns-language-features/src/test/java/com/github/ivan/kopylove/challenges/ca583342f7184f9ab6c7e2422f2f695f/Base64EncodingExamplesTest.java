package com.github.ivan.kopylove.challenges.ca583342f7184f9ab6c7e2422f2f695f;

import com.github.ivan.kopylove.sandbox.util.Util;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.NoSuchAlgorithmException;
import java.util.Base64;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;

/**
 * java.util.* playground
 */
class Base64EncodingExamplesTest
{
    private final String STR = "str";

    private final String BASE64_STR  = "c3Ry";
    private final String BASE64_FILE = "";
    private final String SHA256_FILE = "5710a6d56ee9db56e55862729387397d23f8f1b04de3537d1bd922fd9fba5189";
    private final String fileName    = "cameleon-transition.svg.pdf";

    @Test
    void java_bytes_to_Base64()
    {
        String result = Base64.getEncoder()
                              .encodeToString(STR.getBytes());
        assertEquals(BASE64_STR, result);
    }

    @Test
    void jersey_bytes_to_Base64()
    {
        //        byte[] encoded = com.sun.jersey.core.util.Base64.encode(STR.getBytes());
        //        String myResultField = new String(encoded, StandardCharsets.US_ASCII);
        //        assertEquals(BASE64_STR, myResultField);
    }

    @Test
    void java_bytes_to_Base64_File() throws IOException
    {

        URL resource = getClass().getClassLoader()
                                 .getResource(fileName);
        if (resource != null)
        {
            File myFile = new File(resource.getFile());
            byte[] bytes = Files.readAllBytes(Paths.get(myFile.getAbsolutePath()));
            String result = Base64.getEncoder()
                                  .encodeToString(bytes);
            assertEquals(BASE64_FILE, result);
        }
        else
        {
            fail();
        }
    }

    @Test
    void java_base64_to_bytes() throws IOException, NoSuchAlgorithmException
    {
        byte[] decoded = Base64.getDecoder()
                               .decode(BASE64_FILE);
        String sha256 = Util.calculateFileSha256(decoded);
        assertEquals(SHA256_FILE, sha256);
    }

    @Test
    void jersey_bytes_to_Base64_File()
    {
        //        URL resource = getClass().getClassLoader()
        //                                 .getResource("cameleon-transition.svg.pdf");
        //        if (resource != null)
        //        {
        //            File myFile = new File(resource.getFile());
        //            byte[] bytes = Files.readAllBytes(Paths.get(myFile.getAbsolutePath()));
        //
        //            byte[] encoded = com.sun.jersey.core.util.Base64.encode(bytes);
        //            String myResultField = new String(encoded, StandardCharsets.US_ASCII);
        //            assertEquals(BASE64_FILE, myResultField);
        //        }
        //        else
        //        {
        //            fail();
        //        }
    }
}
